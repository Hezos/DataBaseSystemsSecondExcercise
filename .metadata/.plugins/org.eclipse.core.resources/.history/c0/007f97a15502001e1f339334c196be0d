package DataBases2;

import java.sql.*;

public class Program {

	public static void main(String[] args) {
		 try{
	            Class.forName("oracle.jdbc.driver.OracleDriver");
	            String url = "jdbc:oracle:thin:@193.6.5.58:1521:XE";
	            Connection conn = DriverManager.getConnection(url, "H23_FVIQLY", "FVIQLY_A9");
	            System.out.println( "Connection established" );
	            Statement stmt; 
	            /*stmt = conn.createStatement();
	            String sqlCommand = "SELECT * FROM Hivasok";
	            ResultSet rs = stmt.executeQuery(sqlCommand);
	            while (rs.next()) {
	                System.out.println(rs.getString("column1") + "\t" + rs.getString("column2"));
	            }*/
	            //Dátum: DATE - format YYYY-MM-DD
	            
	            //Egyesével kell futtatni:
    			//Tábla létrehozása: Hívások:
	            UploadTable(conn, "create table Hivasok(Id int primary key, Szemely varchar2(20), Beteg varchar2(20), Datum date)");
	    		//Tábla létrehozása: Autok:
	            UploadTable(conn, "create table Autok(Id int primary key)");
	            //Tábla létrehozása: Kivonulás:
	            UploadTable(conn, "create table Kivonulas(Id int primary key,  Datum date, Aid int foreign key references Autok(Id))");
	            //Tábla létrehozása: Naplo:
	            UploadTable(conn, "create table Naplo(Id int primary key, szoveg varchar2(100))");
	            //Tábla létrehozása: BeazonosítK:
	            UploadTable(conn, "create table BeazonositK(kId int foreign key references Kivonulas(Id), nId foreign key references Naplo(Id), Datum date)");
	            //Tábla létrehozása: BeazonosítH:
	            UploadTable(conn, "create table BeazonositH(hId int foreign key references Hivasok(Id), nId foreign key references Naplo(Id), Datum date)");
	            
	            Upload(conn,"INSERT INTO Hivasok VALUES (1, 'Sárosi Péter', 'Kerekesné Mariann', '02/11/2022')");
	            Upload(conn,"INSERT INTO Hivasok VALUES (2, 'Berki Balázs', 'Farkas Valéria', '13/05/2010')");
	            Upload(conn,"INSERT INTO Hivasok VALUES (3, 'Szepesi Dávid', 'Vecser Béla', '21/07/2017')");
	            Upload(conn,"INSERT INTO Hivasok VALUES (4, 'Kerekes Sándor', 'Keresztes Sándor', '24/10/2006')");
	            Upload(conn,"INSERT INTO Hivasok VALUES (5, 'Fekete András', 'Kerekesné Mariann', '22/04/2013')");
	            Upload(conn,"INSERT INTO Hivasok VALUES (6, 'Mézes Endre', 'Édes Virás', '13/06/2018')");
	            
	            Upload(conn, "INSERT INTO Autok VALUES (1)");
	            Upload(conn, "INSERT INTO Autok VALUES (2)");
	            Upload(conn, "INSERT INTO Autok VALUES (3)");
	            Upload(conn, "INSERT INTO Autok VALUES (4)");

	            Upload(conn,"INSERT INTO Kivonulas VALUES (1, '02/11/2022', 2)");
	            Upload(conn,"INSERT INTO Kivonulas VALUES (2,  '13/05/2010', 4)");
	            Upload(conn,"INSERT INTO Kivonulas VALUES (3,  '21/07/2017', 1)");
	            Upload(conn,"INSERT INTO Kivonulas VALUES (4, '24/10/2006', 3)");
	            Upload(conn,"INSERT INTO Kivonulas VALUES (5,  '22/04/2013', 3)");
	            Upload(conn,"INSERT INTO Kivonulas VALUES (6, '13/06/2018', 2)");
	            
	            
	            
	            /*
	            stmt = conn.createStatement();

	            String createPackageQuery = "CREATE OR REPLACE PACKAGE my_package AS " +
	                    "FUNCTION my_function(p_param1 IN VARCHAR2) RETURN VARCHAR2; " +
	                    "PROCEDURE my_procedure(p_param1 IN VARCHAR2, p_param2 OUT NUMBER); " +
	                    "END my_package;";
	            stmt.execute(createPackageQuery);

	            System.out.println("SQL csomag elkészült.");
	    		*/ 
	        }catch (Exception exception){
	            exception.printStackTrace();
	        }
	}

	public static void CreatePackage(Connection conn) {
		try {
			 	Statement stmt = conn.createStatement();
		        String createPackageQuery = "CREATE OR REPLACE PACKAGE my_package AS " +
		                "FUNCTION my_function(p_param1 IN VARCHAR2) RETURN VARCHAR2; " +
		                "PROCEDURE my_procedure(p_param1 IN VARCHAR2, p_param2 OUT NUMBER); " +
		                "END my_package;";
		        stmt.execute(createPackageQuery);

		        System.out.println("SQL csomag elkészült.");	
		}
	   		
	}
	

	public static void Upload(Connection conn, String parancs) {
	     
	     try {
	    	 Statement stmt = conn.createStatement();
	    	 System.out.println(parancs);
	    	 stmt.executeUpdate(parancs);
	    	 stmt.close();
	     
	     } catch (SQLException e) {
	    	 e.printStackTrace();
	     }
	}
	
	public static void UploadTable(Connection conn, String parancs) {
		try {
			 Statement stmt = conn.createStatement();
	    	 System.out.println(parancs);
	    	 stmt.executeUpdate(parancs);
	    	 stmt.close();
		}catch(SQLException e) {
			e.printStackTrace();
		}
       
	}

}
